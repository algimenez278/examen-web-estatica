console.log("Â¿SweetAlert2 estÃ¡ disponible?", typeof Swal !== "undefined");

// Obtener colores desde :root
const rootStyles = getComputedStyle(document.documentElement);
const colors = {
  success: rootStyles.getPropertyValue("--green").trim(),
  error: rootStyles.getPropertyValue("--red").trim(),
  next: rootStyles.getPropertyValue("--sky").trim(),
  base: rootStyles.getPropertyValue("--base").trim(),
  text: rootStyles.getPropertyValue("--letter").trim(),
};

/**
 * Alerta genÃ©rica de victoria
 * @param {Object} options - ConfiguraciÃ³n de la alerta
 * @param {string} [options.title="ðŸŽ‰ Â¡Ganaste!"]
 * @param {string} [options.text="Buen trabajo dev ðŸ˜Ž"]
 * @param {Function} [options.onConfirm] - AcciÃ³n al confirmar (opcional)
 */
export function showWinAlert({
  title = "ðŸŽ‰ Â¡Ganaste!",
  text = "Buen trabajo dev ðŸ˜Ž",
  onConfirm,
} = {}) {
  Swal.fire({
    title,
    text,
    icon: "success",
    confirmButtonText: "Â¡Genial!",
    confirmButtonColor: colors.success,
    background: colors.base,
    color: colors.text,
  }).then(() => {
    onConfirm?.();
  });
}

/**
 * Alerta genÃ©rica de derrota
 * @param {Object} options - ConfiguraciÃ³n de la alerta
 * @param {string} [options.title="ðŸ’€ Â¡Perdiste!"]
 * @param {string} [options.text="La prÃ³xima serÃ¡..."]
 * @param {string} [options.word] - Palabra correcta (opcional)
 * @param {Function} [options.onReplay] - AcciÃ³n para volver a jugar
 */
export function showLoseAlert({
  title = "ðŸ’€ Â¡Perdiste!",
  text = "La prÃ³xima serÃ¡...",
  word,
  onReplay,
} = {}) {
  let finalText = text;
  if (word) {
    finalText += ` La palabra era: ${word}.`;
  }

  Swal.fire({
    title,
    text: finalText,
    icon: "error",
    confirmButtonText: "Intentar de nuevo",
    confirmButtonColor: colors.error,
    background: colors.base,
    color: colors.text,
  }).then(() => {
    onReplay?.();
  });
}
